include "globals.mzn";

% | ?- domain([X1,X2,X3,Y1,Y2,Y3], 1, 4),
%      S1 in 1..4,
%      S2 in 5..6,
%      S3 in 7..8,
%      geost([object(1,S1,[X1,Y1]), 
%             object(2,S2,[X2,Y2]),
%             object(3,S3,[X3,Y3])],
%             [sbox(1,[0,0],[2,1]), 
%             sbox(1,[0,1],[1,2]), 
%             sbox(1,[1,2],[3,1]),
%             sbox(2,[0,0],[3,1]), 
%             sbox(2,[0,1],[1,3]), 
%             sbox(2,[2,1],[1,1]),
%             sbox(3,[0,0],[2,1]), 
%             sbox(3,[1,1],[1,2]), 
%             sbox(3,[-2,2],[3,1]),
%             sbox(4,[0,0],[3,1]), 
%             sbox(4,[0,1],[1,1]), 
%             sbox(4,[2,1],[1,3]),
%             sbox(5,[0,0],[2,1]), 
%             sbox(5,[1,1],[1,1]), 
%             sbox(5,[0,2],[2,1]),
%             sbox(6,[0,0],[3,1]), 
%             sbox(6,[0,1],[1,1]), 
%             sbox(6,[2,1],[1,1]),
%             sbox(7,[0,0],[3,2]), 
%             sbox(8,[0,0],[2,3])]).

array[1..20,1..2] of int: ssize =
    [|2, 1, | 1, 2, | 3, 1,
     |3, 1, | 1, 3, | 1, 1,
     |2, 1, | 1, 2, | 3, 1,
     |3, 1, | 1, 1, | 1, 3,
     |2, 1, | 1, 1, | 2, 1,
     |3, 1, | 1, 1, | 1, 1,
     |3, 2,
     |2, 3,
     |];

array[1..20,1..2] of int: soff =
    [|0, 0, | 0, 1, | 1, 2,
     |0, 0, | 0, 1, | 2, 1,
     |0, 0, | 1, 1, |-2, 2,
     |0, 0, | 0, 1, | 2, 1,
     |0, 0, | 1, 1, | 0, 2,
     |0, 0, | 0, 1, | 2, 1,
     |0, 0,
     |0, 0,
     |];

array[1..8] of set of int: shape = [{1,2,3}, {4,5,6}, {7,8,9}, {10,11,12}, {13,14,15}, {16,17,18}, {19}, {20}];

array[1..3,1..2] of var 1..4: x;

array[1..3] of var 1..8: kind;

constraint
    kind[1] in 1..4 /\
    kind[2] in 5..6 /\
    kind[3] in 7..8 /\
    lex2(x) /\
    geost_bb(2, ssize, soff, shape, x, kind, [0,0], [6,6]);

solve :: int_search(array1d(x)++kind, input_order, indomain_min, complete) satisfy;

output [show(x) ++ "\n" ++ show(kind) ++ "\n"];


